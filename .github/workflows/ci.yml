name: .NET CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Restore dependencies
        run: dotnet restore KindergartenAPI.sln
        
      - name: Build solution
        run: dotnet build KindergartenAPI.sln --no-restore --configuration Release
        
      - name: Run tests with coverage
        run: |
          dotnet test KindergartenAPI.sln \
            --no-build \
            --configuration Release \
            --logger "trx" \
            --logger "console;verbosity=detailed" \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        
      - name: List test result files (Debug)
        run: |
          echo "Listing contents of root directory:"
          ls -la ./
          echo "Looking for TestResults directories:"
          find . -name "TestResults" -type d
          echo "Looking for .trx files:"
          find . -name "*.trx" -type f
          echo "Looking for coverage files:"
          find . -name "*.xml" -type f
        
      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: '.NET Test Results'
          path: './TestResults/*.trx'
          reporter: dotnet-trx
          fail-on-error: false
          
      - name: Upload test results artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            ./TestResults/**/*
            ./**/TestResults/**/*
          retention-days: 30
          
      - name: Generate coverage report
        if: always()
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator \
            -reports:"./TestResults/**/coverage.opencover.xml" \
            -targetdir:"./TestResults/coverage" \
            -reporttypes:"Html;Cobertura"
        continue-on-error: true
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: ./TestResults/coverage/
          retention-days: 30
          
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: 5monkeys/cobertura-action@master
        with:
          path: ./TestResults/coverage/Cobertura.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 75
        continue-on-error: true
